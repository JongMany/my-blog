name: Deploy to GitHub Pages (Selective MFE)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN || '' }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM  || ''}}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            packages:
              - 'packages/**'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'turbo.json'
              - 'scripts/**'
              - 'package.json'
              - '.github/workflows/**'
            apps:
              - 'apps/**'

      - uses: pnpm/action-setup@v4
        with: { run_install: false }

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - run: pnpm -w install --frozen-lockfile

      - run: echo "VITE_BUILD_ID=${{ github.sha }}" >> $GITHUB_ENV

      # ===== 빌드 =====
      - name: Build all (packages/infra changed)
        if: steps.changes.outputs.packages == 'true'
        run: pnpm -w turbo run build

      - name: Build only changed since last commit (with deps)
        if: steps.changes.outputs.packages != 'true' && github.event.before != '' && github.event.before != github.sha
        run: pnpm -w turbo run build --filter="...[${{ github.event.before }}]"

      - name: Fallback full build if before empty or equal
        if: steps.changes.outputs.packages != 'true' && (github.event.before == '' || github.event.before == github.sha)
        run: pnpm -w turbo run build

      # ===== 보충 빌드 (dist 없으면 해당 앱만) =====
      - name: Ensure blog dist exists
        run: test -f apps/blog/dist/assets/remoteEntry.js || pnpm -w -F blog build:ghp
      - name: Ensure portfolio dist exists
        run: test -f apps/portfolio/dist/assets/remoteEntry.js || pnpm -w -F portfolio build:ghp
      - name: Ensure resume dist exists
        run: test -f apps/resume/dist/assets/remoteEntry.js || pnpm -w -F resume build:ghp

      # ===== 수집 + 검사 =====
      - run: node scripts/collect-ghp.js

      - name: Sanity check
        run: |
          test -f dist_ghp/.nojekyll
          test -f dist_ghp/index.html
          test -f dist_ghp/blog/assets/remoteEntry.js
          test -f dist_ghp/portfolio/assets/remoteEntry.js
          test -f dist_ghp/resume/assets/remoteEntry.js

      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist_ghp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
