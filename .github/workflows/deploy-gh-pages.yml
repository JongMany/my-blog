name: Deploy to GitHub Pages (Selective MFE)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4

      # 어떤 앱이 바뀌었는지 감지
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            packages:
              - 'packages/**'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'turbo.json'
              - 'scripts/**'
              - 'package.json'
              - '.github/workflows/**'
            shell:
              - 'apps/shell/**'
            blog:
              - 'apps/blog/**'
            portfolio:
              - 'apps/portfolio/**'
            resume:
              - 'apps/resume/**'

      - uses: pnpm/action-setup@v4
        with: { run_install: false }

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - run: pnpm -w install --frozen-lockfile

      # 캐시버스터(셸 remotes의 ?v=SHA)
      - run: echo "VITE_BUILD_ID=${{ github.sha }}" >> $GITHUB_ENV

      # --- 셸은 항상 새로 빌드 (SHA 주입 필요) ---
      - name: Build shell
        run: pnpm -w -F shell build:ghp

      # --- blog: 변경되었거나 packages가 바뀌면 빌드, 아니면 이전 artifact 재사용 ---
      - name: Build blog
        if: steps.changes.outputs.blog == 'true' || steps.changes.outputs.packages == 'true'
        run: pnpm -w -F blog build:ghp
      - name: Restore blog dist from last run
        if: steps.changes.outputs.blog != 'true' && steps.changes.outputs.packages != 'true'
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Deploy to GitHub Pages (Selective MFE)
          branch: main
          name: blog-dist-latest
          path: apps/blog/dist
          if_no_artifact_found: warn

      # --- portfolio ---
      - name: Build portfolio
        if: steps.changes.outputs.portfolio == 'true' || steps.changes.outputs.packages == 'true'
        run: pnpm -w -F portfolio build:ghp
      - name: Restore portfolio dist from last run
        if: steps.changes.outputs.portfolio != 'true' && steps.changes.outputs.packages != 'true'
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Deploy to GitHub Pages (Selective MFE)
          branch: main
          name: portfolio-dist-latest
          path: apps/portfolio/dist
          if_no_artifact_found: warn

      # --- resume ---
      - name: Build resume
        if: steps.changes.outputs.resume == 'true' || steps.changes.outputs.packages == 'true'
        run: pnpm -w -F resume build:ghp
      - name: Restore resume dist from last run
        if: steps.changes.outputs.resume != 'true' && steps.changes.outputs.packages != 'true'
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: Deploy to GitHub Pages (Selective MFE)
          branch: main
          name: resume-dist-latest
          path: apps/resume/dist
          if_no_artifact_found: warn

      # 빌드물 수집 (flat)
      - run: node scripts/collect-ghp.js

      # 필수 파일 존재 검사
      - run: |
          test -f dist_ghp/.nojekyll
          test -f dist_ghp/index.html
          test -f dist_ghp/blog/assets/remoteEntry.js
          test -f dist_ghp/portfolio/assets/remoteEntry.js
          test -f dist_ghp/resume/assets/remoteEntry.js

      # 사람이 내려받아 확인할 수 있게 각 앱 dist도 이름 고정으로 업로드(다음 런에서 재사용)
      - uses: actions/upload-artifact@v4
        with:
          name: blog-dist-latest
          path: apps/blog/dist
          if-no-files-found: warn
          retention-days: 30
      - uses: actions/upload-artifact@v4
        with:
          name: portfolio-dist-latest
          path: apps/portfolio/dist
          if-no-files-found: warn
          retention-days: 30
      - uses: actions/upload-artifact@v4
        with:
          name: resume-dist-latest
          path: apps/resume/dist
          if-no-files-found: warn
          retention-days: 30

      # 전체 사이트 아티팩트(배포용)
      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist_ghp

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
